# -*- mode: ruby -*-
# vi: set ft=ruby :

unless Vagrant.has_plugin?("vagrant-vbguest")
  raise "Please install the vagrant-vbguest plugin by running `vagrant plugin install vagrant-vbguest`"
end

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Using Vagrant Cloud
  # https://vagrantcloud.com/ubuntu/bionic64
  config.vm.box = "ubuntu/bionic64"
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end
  config.vm.hostname = "web"

  # config.ssh.forward_agent = true
  config.vm.network "private_network", ip: "192.168.88.99"
  config.vm.network :forwarded_port, guest: 80, host: 8080, id: "nginx"
  config.vm.network :forwarded_port, guest: 4567, host: 4567, id: "redmon"
  config.vm.network :forwarded_port, guest: 8000, host: 8000, id: "django"
  config.vm.network :forwarded_port, guest: 15672, host: 15672, id: "rabbitmq-management"

  config.vm.synced_folder ".", "/vagrant", id: "vagrant-root", disabled: true
  config.vm.synced_folder ".", "/var/www/django/", id: "django-root", group: "www-data", disabled: false, :mount_options => ["uid=1002"]

  config.vm.provider :virtualbox do |vb|
    vb.memory = 1024
    vb.cpus = 1
  end

  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "provisioning/playbooks/bootstrap_user.yml"
    ansible.inventory_path = "provisioning/inventory/vagrant_single"
    ansible.limit = 'all'
    ansible.host_key_checking = false
    # ansible.verbose = 'vvvv'
  end

  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "provisioning/playbooks/site.yml"
    ansible.inventory_path = "provisioning/inventory/vagrant_single"
    ansible.limit = 'all'
    ansible.ask_sudo_pass = true
    ansible.host_key_checking = false
    ansible.raw_ssh_args = ['-o IdentityFile={{cookiecutter.private_ssh_key_path}}']
    # ansible.verbose = 'vvvv'
    # ansible.tags = ['tag_name', 'another_tag']
  end
end
