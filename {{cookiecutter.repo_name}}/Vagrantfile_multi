# -*- mode: ruby -*-
# vi: set ft=ruby :

unless Vagrant.has_plugin?("vagrant-vbguest")
  raise "Please install the vagrant-vbguest plugin by running `vagrant plugin install vagrant-vbguest`"
end

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  vms = {
    :db => "192.168.99.22",
    :web => "192.168.99.11"
  }

  vms.each_with_index do |(server_name, ip), index|
    config.vm.define server_name do |node|
      # Using Vagrant Cloud
      # https://vagrantcloud.com/ubuntu/bionic64
      node.vm.box = "ubuntu/bionic64"
      if Vagrant.has_plugin?("vagrant-cachier")
        config.cache.scope = :box
        config.cache.synced_folder_opts = {
          type: :nfs,
        }
      end
      node.vm.host_name = server_name.to_s
      node.vm.network "private_network", ip: ip

      # activate port forwarding and start provisioning on the last vm
      if vms.length - 1 == index
        node.vm.network :forwarded_port, guest: 80, host: 8080, id: "nginx"
        node.vm.network :forwarded_port, guest: 4567, host: 4567, id: "redmon"
        node.vm.network :forwarded_port, guest: 8000, host: 8000, id: "django"
        node.vm.network :forwarded_port, guest: 15672, host: 15672, id: "rabbitmq-management"

        node.vm.synced_folder(
          ".",
          "/vagrant",
          id: "vagrant-root",
          disabled: true
        )
        node.vm.synced_folder(
          ".",
          "/var/www/django/",
          id: "django-root",
          group: "www-data",
          disabled: false,
          :mount_options => ["uid=1002"]
        )

        node.vm.provision "ansible" do |ansible|
          ansible.playbook = "provisioning/playbooks/bootstrap_user.yml"
          ansible.inventory_path = "provisioning/inventory/vagrant_multi"
          ansible.limit = 'all'
          ansible.host_key_checking = false
          # ansible.verbose = 'vvvv'
        end

        node.vm.provision "ansible" do |ansible|
          ansible.playbook = "provisioning/playbooks/site.yml"
          ansible.inventory_path = "provisioning/inventory/vagrant_multi"
          ansible.limit = 'all'
          ansible.ask_sudo_pass = true
          ansible.host_key_checking = false
          ansible.raw_ssh_args = ['-o IdentityFile={{cookiecutter.private_ssh_key_path}}']
          # ansible.verbose = 'vvvv'
          # ansible.tags = ['tag_name', 'another_tag']
        end
      end
    end
  end

  config.vm.provider :virtualbox do |vb|
    vb.memory = 512
    vb.cpus = 1
  end

end
